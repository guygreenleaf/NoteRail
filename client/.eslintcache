[{"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\App.jsx":"1","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\index.jsx":"2","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\Components\\layout\\Navbar.jsx":"3","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\Components\\layout\\Landing.jsx":"4","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\Components\\layout\\Auth\\Register.jsx":"5","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\store.jsx":"6","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\reducers\\index.jsx":"7","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\reducers\\authReducers.jsx":"8","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\actions\\types.jsx":"9","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\reducers\\errorReducers.jsx":"10","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\actions\\authActions.jsx":"11","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\utils\\setAuthToken.js":"12","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\Components\\private-routes\\PrivateRoute.jsx":"13","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\Components\\layout\\dashboard\\Dashboard.jsx":"14","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\Components\\layout\\Auth\\RegisterSuccess.jsx":"15"},{"size":2065,"mtime":1608574342056,"results":"16","hashOfConfig":"17"},{"size":326,"mtime":1608271536874,"results":"18","hashOfConfig":"17"},{"size":2154,"mtime":1608572892627,"results":"19","hashOfConfig":"17"},{"size":5310,"mtime":1608452590688,"results":"20","hashOfConfig":"17"},{"size":6132,"mtime":1608580181282,"results":"21","hashOfConfig":"17"},{"size":416,"mtime":1608361519080,"results":"22","hashOfConfig":"17"},{"size":213,"mtime":1608360579629,"results":"23","hashOfConfig":"17"},{"size":580,"mtime":1608360772781,"results":"24","hashOfConfig":"17"},{"size":137,"mtime":1608359828219,"results":"25","hashOfConfig":"17"},{"size":267,"mtime":1608360249051,"results":"26","hashOfConfig":"17"},{"size":1833,"mtime":1608584543022,"results":"27","hashOfConfig":"17"},{"size":338,"mtime":1608360359760,"results":"28","hashOfConfig":"17"},{"size":601,"mtime":1608449024740,"results":"29","hashOfConfig":"17"},{"size":1222,"mtime":1608572976203,"results":"30","hashOfConfig":"17"},{"size":1161,"mtime":1608575407413,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1n2n8py",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\App.jsx",[],["67","68"],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\index.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\Components\\layout\\Navbar.jsx",["69","70","71"],"import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\r\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBContainer, MDBIcon } from \"mdbreact\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\nclass NavbarPage extends Component {\r\nstate = {\r\n  collapseID: \"\"\r\n};\r\n\r\ntoggleCollapse = collapseID => () =>\r\n  this.setState(prevState => ({\r\n  collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n}));\r\n\r\nrender() {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBNavbar color=\"blue-gradient color-block-5\" dark expand=\"md\" style={{borderBottom:'1px solid black'}} fixed='top'>\r\n      <Link to='/dashboard'>\r\n        <MDBNavbarBrand>\r\n\r\n          <strong className=\"black-text\" >NoteRail</strong>\r\n        </MDBNavbarBrand>\r\n        </Link>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse(\"navbarCollapse3\")} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.collapseID} navbar>\r\n          <MDBNavbarNav right>\r\n            <MDBNavItem>\r\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"#!\">\r\n                <MDBIcon icon=\"envelope\" className=\"mr-1\" />Contact</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"#!\">\r\n                <MDBIcon icon=\"cog\" className=\"mr-1\" />Settings</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBDropdown>\r\n                <MDBDropdownToggle nav caret>\r\n                  <MDBIcon icon=\"user\" className=\"mr-1\" />Profile\r\n                </MDBDropdownToggle>\r\n                <MDBDropdownMenu className=\"dropdown-default\" right>\r\n                  <MDBDropdownItem href=\"#!\">My account</MDBDropdownItem>\r\n                  <MDBDropdownItem href=\"#!\">Log out</MDBDropdownItem>\r\n                </MDBDropdownMenu>\r\n              </MDBDropdown>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n\r\n    </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\Components\\layout\\Landing.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\Components\\layout\\Auth\\Register.jsx",["72"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport { loginUser } from \"../../../actions/authActions\";\r\n        \r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {},\r\n      lastErrors: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   if (nextProps.errors) {\r\n  //     this.setState({\r\n  //       errors: nextProps.errors,\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  //POSSIBLE ERROR, MAY NEED TO REVISE. REFACTORED FROM ^ ACCORDING TO REACT DOC PRACTICES\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.errors !== state.errors) {\r\n      return {\r\n        errors: props.errors,\r\n        lastErrors: props.errors,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2,\r\n    };\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <FadeIn transitionDuration=\"1100\">\r\n        <div\r\n          className=\"container\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            border: \"1px black\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col s8 offset-s1\">\r\n              <div\r\n                className=\"col s12\"\r\n                style={{ paddingLeft: \"11.250px\", marginTop: \"20px\" }}\r\n              >\r\n                <h4>\r\n                  <b>Register</b> below\r\n                </h4>\r\n                <p className=\"grey-text text-darken-1\">\r\n                  Already have an account? <Link to=\"/\">Log in</Link>\r\n                </p>\r\n              </div>\r\n              <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    onChange={this.onChange}\r\n                    value={this.state.username}\r\n                    error={errors.username}\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    className={classnames(\"\", {\r\n                      invalid: errors.username,\r\n                    })}\r\n                  />\r\n                  <label htmlFor=\"name\">Username</label>\r\n                  <span className=\"red-text\">{errors.username}</span>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    onChange={this.onChange}\r\n                    value={this.state.email}\r\n                    error={errors.email}\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    className={classnames(\"\", {\r\n                      invalid: errors.email,\r\n                    })}\r\n                  />\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <span className=\"red-text\">{errors.email}</span>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    onChange={this.onChange}\r\n                    value={this.state.password}\r\n                    error={errors.password}\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    className={classnames(\"\", {\r\n                      invalid: errors.password,\r\n                    })}\r\n                  />\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <span className=\"red-text\">{errors.password}</span>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    onChange={this.onChange}\r\n                    value={this.state.password2}\r\n                    error={errors.password2}\r\n                    id=\"password2\"\r\n                    type=\"password\"\r\n                    className={classnames(\"\", {\r\n                      invalid: errors.password2,\r\n                    })}\r\n                  />\r\n                  <label htmlFor=\"password2\">Confirm Password</label>\r\n                  <span className=\"red-text\">{errors.password2}</span>\r\n                </div>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"2px\" }}>\r\n                  <button\r\n                    style={{\r\n                      marginBottom: \"25px\",\r\n                      width: \"125px\",\r\n                      height: \"45px\",\r\n                      borderRadius: \"3px\",\r\n                      letterSpacing: \"1.5px\",\r\n                      marginTop: \"1rem\",\r\n                      background:\r\n                        \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n                      color: \"white\",\r\n                    }}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-large waves-effect waves-light hoverable accent-3\"\r\n                  >\r\n                    Sign up\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </FadeIn>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\store.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\reducers\\index.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\reducers\\authReducers.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\actions\\types.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\reducers\\errorReducers.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\actions\\authActions.jsx",["73","74"],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\utils\\setAuthToken.js",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\Components\\private-routes\\PrivateRoute.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\Components\\layout\\dashboard\\Dashboard.jsx",["75"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../../actions/authActions\";\r\nimport Navbar from '../Navbar';\r\n\r\nclass Dashboard extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\nrender() {\r\n    const { user } = this.props.auth;\r\nreturn (\r\n  <div>\r\n  \r\n    <Navbar></Navbar>\r\n    \r\n      <div style={{ }} className=\"container valign-wrapper\">\r\n      \r\n<button\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\"\r\n                \r\n              }}\r\n              onClick={this.onLogoutClick}\r\n              className=\"btn btn-large waves-effect waves-light hoverable blue-gradient accent-3\"\r\n            >\r\n              Logout\r\n            </button>\r\n      </div> \r\n      </div>\r\n    );\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Dashboard);","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\Components\\layout\\Auth\\RegisterSuccess.jsx",["76","77","78","79","80","81","82","83"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBModalFooter,\r\n    MDBBox,\r\n  } from \"mdbreact\";\r\n\r\n\r\nexport default function RegisterSuccess() {\r\n    return (\r\n\r\n        <div>\r\n             <FadeIn transitionDuration='1100'>\r\n    <MDBBox\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <MDBCard>\r\n        <MDBCardBody className=\"mx-3\">\r\n          <div className=\"text-center\">\r\n            <h3 className=\"dark-grey-text mb-5\">\r\n              <strong>You have successfully registered.</strong>\r\n            </h3>\r\n            <h4 className=\"dark-grey-text mb-5\">\r\n                <strong>Please click <a href='/'>here</a> to return to the login screen and sign in with your credentials</strong>\r\n            </h4>\r\n          </div>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBBox>\r\n    </FadeIn>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":4,"column":27,"nodeType":"90","messageId":"91","endLine":4,"endColumn":33},{"ruleId":"88","severity":1,"message":"92","line":4,"column":35,"nodeType":"90","messageId":"91","endLine":4,"endColumn":40},{"ruleId":"88","severity":1,"message":"93","line":4,"column":42,"nodeType":"90","messageId":"91","endLine":4,"endColumn":48},{"ruleId":"88","severity":1,"message":"94","line":8,"column":10,"nodeType":"90","messageId":"91","endLine":8,"endColumn":19},{"ruleId":"88","severity":1,"message":"95","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":22},{"ruleId":"88","severity":1,"message":"96","line":4,"column":24,"nodeType":"90","messageId":"91","endLine":4,"endColumn":32},{"ruleId":"88","severity":1,"message":"97","line":13,"column":13,"nodeType":"90","messageId":"91","endLine":13,"endColumn":17},{"ruleId":"88","severity":1,"message":"98","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"99","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":14},{"ruleId":"88","severity":1,"message":"100","line":2,"column":16,"nodeType":"90","messageId":"91","endLine":2,"endColumn":26},{"ruleId":"88","severity":1,"message":"101","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":17},{"ruleId":"88","severity":1,"message":"102","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":17},{"ruleId":"88","severity":1,"message":"103","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":22},{"ruleId":"88","severity":1,"message":"104","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":18},{"ruleId":"88","severity":1,"message":"105","line":11,"column":5,"nodeType":"90","messageId":"91","endLine":11,"endColumn":19},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'loginUser' is defined but never used.","'MDBContainer' is defined but never used.","'MDBAlert' is defined but never used.","'user' is assigned a value but never used.","'Component' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","'PropTypes' is defined but never used.","'connect' is defined but never used.","'registerUser' is defined but never used.","'classnames' is defined but never used.","'MDBModalFooter' is defined but never used.","no-global-assign","no-unsafe-negation"]