[{"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\App.jsx":"1","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\index.jsx":"2","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\header\\Header.jsx":"3","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\body\\Body.jsx":"4","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\Landing.jsx":"5","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\notes\\Notes.jsx":"6","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\register\\Register.jsx":"7","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\ForgotPassword.jsx":"8","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\ResetPassword.jsx":"9","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\store.js":"10","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\reducers\\index.js":"11","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\reducers\\authReducer.js":"12","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\actions\\index.js":"13","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\actions\\authAction.js":"14"},{"size":1284,"mtime":1609226583547,"results":"15","hashOfConfig":"16"},{"size":443,"mtime":1609226777377,"results":"17","hashOfConfig":"16"},{"size":399,"mtime":1608783974095,"results":"18","hashOfConfig":"16"},{"size":315,"mtime":1608791454121,"results":"19","hashOfConfig":"16"},{"size":4898,"mtime":1609226671901,"results":"20","hashOfConfig":"16"},{"size":211,"mtime":1609210519415,"results":"21","hashOfConfig":"16"},{"size":5850,"mtime":1608954703054,"results":"22","hashOfConfig":"16"},{"size":4150,"mtime":1609122580943,"results":"23","hashOfConfig":"16"},{"size":4876,"mtime":1609206798582,"results":"24","hashOfConfig":"16"},{"size":406,"mtime":1609219501552,"results":"25","hashOfConfig":"16"},{"size":121,"mtime":1609215372723,"results":"26","hashOfConfig":"16"},{"size":421,"mtime":1609212427247,"results":"27","hashOfConfig":"16"},{"size":67,"mtime":1609211624585,"results":"28","hashOfConfig":"16"},{"size":121,"mtime":1609212517276,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1n2n8py",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\App.jsx",["63","64","65","66","67","68","69","70","71"],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\index.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\header\\Header.jsx",[],["72","73"],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\body\\Body.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\Landing.jsx",["74","75","76","77","78","79","80","81","82","83","84","85","86"],"import React, { Component, useState } from \"react\";\r\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MDBCard, MDBCardBody, MDBFooter, MDBBox } from \"mdbreact\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport Axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Register from \"./register/Register\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport { dispatchLogin } from \"../redux/actions/authAction\";\r\n\r\nfunction Landing() {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  // const auth = useSelector((state) => state.auth);\r\n  // console.log(auth);\r\n  // const { User, isLogged } = auth;\r\n  // const dispatch = useDispatch();\r\n  // const history = useHistory();\r\n\r\n  const [err, setErr] = useState(\"\");\r\n  // const { email, password, err, success } = user;\r\n\r\n  const onChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n    setErr(\"\");\r\n  };\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const modalClick = (e) => {\r\n    setModal(true);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const res = await Axios.post(\"/user/login\", {\r\n        email: user.email,\r\n        password: user.password,\r\n      });\r\n      setUser({ email: \"\", password: \"\" });\r\n      // dispatch(dispatchLogin());\r\n      // history.push(\"/notes\");\r\n      setErr(res.data.msg);\r\n    } catch (err) {\r\n      err.response.data.msg &&\r\n        setErr(\r\n          <FadeIn transitionDuration=\"1100\">{err.response.data.msg}</FadeIn>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n      }}\r\n    >\r\n      <FadeIn transitionDuration=\"1100\">\r\n        <MDBBox display=\"flex\" justifyContent=\"center\">\r\n          <MDBCard>\r\n            <MDBCardBody className=\"mx-3\">\r\n              <div className=\"text-center\">\r\n                <h3 className=\"dark-grey-text mb-5\">\r\n                  <strong>Welcome to NoteRail!</strong>\r\n                </h3>\r\n                <h4 style={{ color: \"black\" }}>{err}</h4>\r\n              </div>\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"login-email\"\r\n                    required\r\n                    value={user.email}\r\n                    onChange={onChangeInput}\r\n                  />\r\n                  <label htmlFor=\"email\">Email</label>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"login-password\"\r\n                    required\r\n                    value={user.password}\r\n                    autoComplete=\"true\"\r\n                    onChange={onChangeInput}\r\n                  />\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <span className=\"red-text\"></span>\r\n                </div>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                  <button\r\n                    style={{\r\n                      width: \"107px\",\r\n                      height: \"45px\",\r\n                      borderRadius: \"3px\",\r\n                      letterSpacing: \"1.5px\",\r\n                      marginTop: \"1rem\",\r\n                      background:\r\n                        \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n                      color: \"white\",\r\n                    }}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                  <div>\r\n                    <p className=\"font-small grey-text\">\r\n                      Forgot your password?\r\n                      <Link to=\"/forgotPassword\" className=\"font-small ml-1\">\r\n                        Click Here\r\n                      </Link>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </MDBCardBody>\r\n            <MDBFooter className=\"mx-5 pt-3 mb-1 bg-white\">\r\n              <p\r\n                className=\"font-small grey-text\"\r\n                style={{ marginRight: \"30px\" }}\r\n              >\r\n                Not a member?\r\n                <Link to=\"/register\" className=\"blue-text ml-1\">\r\n                  Sign Up\r\n                </Link>\r\n              </p>\r\n            </MDBFooter>\r\n          </MDBCard>\r\n        </MDBBox>\r\n      </FadeIn>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\notes\\Notes.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\register\\Register.jsx",["87","88","89"],"import React, { Component, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport Axios from \"axios\";\r\n\r\nfunction Register() {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n    setErr(\"\");\r\n  };\r\n  const clearState = () => {\r\n    setUser({ password: \"\", password2: \"\" });\r\n  };\r\n\r\n  \r\n  const registerSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (user.password !== user.password2) {\r\n      return setErr(\"Passwords do not match. Please try again\");\r\n    } else {\r\n      try {\r\n        const res = await Axios.post(\"/user/register\", {\r\n          name: user.name,\r\n          email: user.email,\r\n          password: user.password,\r\n        });\r\n        setUser({ name: \"\", email: \"\", password: \"\" });\r\n        setErr(res.data.msg);\r\n      } catch (err) {\r\n        err.response.data.msg && setErr(err.response.data.msg);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n      }}\r\n    >\r\n      <FadeIn transitionDuration=\"1100\">\r\n        <div\r\n          className=\"container\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            border: \"1px black\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col s8 offset-s1\">\r\n              <div\r\n                className=\"col s12\"\r\n                style={{ paddingLeft: \"11.250px\", marginTop: \"20px\" }}\r\n              >\r\n                <h4>\r\n                  <b>Register</b> below\r\n                </h4>\r\n                <p className=\"grey-text text-darken-1\">\r\n                  Already have an account? <Link to=\"/\">Log in</Link>\r\n                </p>\r\n                <h4 style={{ color: \"red\" }}>{err}</h4>\r\n              </div>\r\n              <form\r\n                noValidate\r\n                onSubmit={registerSubmit} /*>onSubmit={this.onSubmit}*/\r\n              >\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    required\r\n                    onChange={onChange}\r\n                    value={user.name}\r\n                    name=\"name\"\r\n                    id=\"register-name\"\r\n                    type=\"text\"\r\n                    // className={classnames(\"\", {\r\n                    //   invalid: errors.username,\r\n                    // })}\r\n                  />\r\n                  <label htmlFor=\"name\">Username</label>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    required\r\n                    onChange={onChange}\r\n                    value={user.email}\r\n                    // error={errors.email}\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    //     className={classnames(\"\", {\r\n                    //     invalid: errors.email\r\n                    //   })}\r\n                  />\r\n                  <label htmlFor=\"email\">Email</label>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    required\r\n                    onChange={onChange}\r\n                    value={user.password}\r\n                    // error={errors.password}\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    //     className={classnames(\"\", {\r\n                    //     invalid: errors.password\r\n                    //   })}\r\n                  />\r\n                  <label htmlFor=\"password\">Password</label>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    required\r\n                    onChange={onChange}\r\n                    value={user.password2}\r\n                    // error={errors.password2}\r\n                    id=\"password2\"\r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    //     className={classnames(\"\", {\r\n                    //     invalid: errors.password2\r\n                    //   })}\r\n                  />\r\n                  <label htmlFor=\"password2\">Confirm Password</label>\r\n                </div>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"2px\" }}>\r\n                  <button\r\n                    style={{\r\n                      marginBottom: \"25px\",\r\n                      width: \"125px\",\r\n                      height: \"45px\",\r\n                      borderRadius: \"3px\",\r\n                      letterSpacing: \"1.5px\",\r\n                      marginTop: \"1rem\",\r\n                      background:\r\n                        \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n                      color: \"white\",\r\n                    }}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-large waves-effect waves-light hoverable accent-3\"\r\n                  >\r\n                    Sign up\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </FadeIn>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Register.propTypes = {\r\n//   registerUser: PropTypes.func.isRequired,\r\n//   auth: PropTypes.object.isRequired,\r\n//   errors: PropTypes.object.isRequired,\r\n// };\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   auth: state.auth,\r\n//   errors: state.errors,\r\n// });\r\n\r\n// export default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\nexport default Register;\r\n","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\ForgotPassword.jsx",["90","91","92","93","94","95","96","97","98"],"import React from \"react\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardTitle,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBModal,\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBIcon,\r\n  MDBBox,\r\n  MDBCardBody,\r\n  MDBFooter,\r\n} from \"mdbreact\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nconst ForgotPassword = () => {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const [err, setErr] = useState(\"\");\r\n  // const { email, password, err, success } = user;\r\n\r\n  const onChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n    setErr(\"\");\r\n  };\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const modalClick = (e) => {\r\n    setModal(true);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const res = await Axios.post(\"/user/forgot\", {\r\n        email: user.email,\r\n      });\r\n      setUser({ email: \"\" });\r\n      setErr(res.data.msg);\r\n    } catch (err) {\r\n      err.response.data.msg &&\r\n        setErr(\r\n          <FadeIn transitionDuration=\"1100\">{err.response.data.msg}</FadeIn>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n      }}\r\n    >\r\n      <FadeIn transitionDuration=\"1100\">\r\n        <MDBBox display=\"flex\" justifyContent=\"center\">\r\n          <MDBCard>\r\n            <MDBCardBody className=\"mx-3\">\r\n              <div className=\"text-center\">\r\n                <h3 className=\"dark-grey-text mb-5\">\r\n                  <strong>Forgot your password?</strong>\r\n                </h3>\r\n                <h5 className=\"dark-grey-text\">\r\n                  Enter your email to reset your password.\r\n                </h5>\r\n                <h6 style={{ color: \"black\" }}>{err}</h6>\r\n              </div>\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    required\r\n                    value={user.email}\r\n                    onChange={onChangeInput}\r\n                  />\r\n                  <label htmlFor=\"email\">Email</label>\r\n                </div>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                  <button\r\n                    style={{\r\n                      width: \"150px\",\r\n                      height: \"55px\",\r\n                      borderRadius: \"3px\",\r\n                      letterSpacing: \"1.5px\",\r\n                      marginTop: \"5px\",\r\n                      background:\r\n                        \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n                      color: \"white\",\r\n                    }}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                  >\r\n                    Reset Password\r\n                  </button>\r\n                </div>\r\n              </form>\r\n              <div style={{ marginTop: \"10px\" }}>\r\n                <Link\r\n                  to=\"/\"\r\n                  className=\"blue-text\"\r\n                  style={{ marginLeft: \"20px\" }}\r\n                >\r\n                  Back to login\r\n                </Link>\r\n              </div>\r\n            </MDBCardBody>\r\n            <MDBFooter className=\"mx-5 pt-3 mb-1 bg-white\">\r\n              <p\r\n                className=\"font-small grey-text\"\r\n                style={{ marginRight: \"30px\" }}\r\n              >\r\n                Not a member?\r\n                <Link to=\"/register\" className=\"blue-text ml-1\">\r\n                  Sign Up\r\n                </Link>\r\n              </p>\r\n\r\n              <p\r\n                className=\"font-small grey-text\"\r\n                style={{ marginRight: \"30px\" }}\r\n              ></p>\r\n            </MDBFooter>\r\n          </MDBCard>\r\n        </MDBBox>\r\n      </FadeIn>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\ResetPassword.jsx",["99","100","101"],"import React, { Component, useState } from \"react\";\r\nimport { Link, withRouter, useParams } from \"react-router-dom\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nfunction ResetPassword() {\r\n    const [user, setUser] = useState({\r\n        password: \"\",\r\n        password2: \"\"\r\n      });\r\n\r\n      const {token} = useParams();\r\n    \r\n      const [err, setErr] = useState(\"\");\r\n    \r\n      const [isHidden, hiding] = useState(true);\r\n\r\n      const onChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser({ ...user, [name]: value });\r\n        setErr(\"\");\r\n      };\r\n      const clearState = () => {\r\n        setUser({ password: \"\", password2: \"\" });\r\n      };\r\n    \r\n      \r\n      const changeSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (user.password !== user.password2) {\r\n          return setErr(\"Passwords do not match. Please try again\");\r\n        } else {\r\n          try {\r\n            const res = await Axios.post(\"/user/reset\",{ \r\n              password: user.password\r\n            }, {headers: {'Authorization': token}});\r\n            hiding(false);\r\n            setErr(res.data.msg);\r\n          } catch (err) {\r\n            err.response.data.msg && setErr(err.response.data.msg);\r\n          }\r\n        }\r\n      };\r\n      return (\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n        >\r\n          <FadeIn transitionDuration=\"1100\">\r\n            <div\r\n              className=\"container\"\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                border: \"1px black\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n              <div className=\"row\">\r\n                <div className=\"col s8 offset-s1\">\r\n                  <div\r\n                    className=\"col s12\"\r\n                    style={{ paddingLeft: \"11.250px\", marginTop: \"20px\" }}\r\n                  >\r\n                    <h4>\r\n                      <b>Reset</b> password\r\n                    </h4>\r\n                    <h4 style={{ color: \"red\" }}>{err}</h4>\r\n                  </div>\r\n                  <form\r\n                    noValidate\r\n                    onSubmit={changeSubmit} /*>onSubmit={this.onSubmit}*/\r\n                  >\r\n                  <Link to=\"/\" style={{marginLeft: '12px'}} hidden={isHidden}> Click here to return to the sign in page</Link>\r\n                    <div className=\"input-field col s12\">\r\n                      <input\r\n                        required\r\n                        onChange={onChange}\r\n                        value={user.password}\r\n                        // error={errors.password}\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        //     className={classnames(\"\", {\r\n                        //     invalid: errors.password\r\n                        //   })}\r\n                      />\r\n                      <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n                    <div className=\"input-field col s12\">\r\n                      <input\r\n                        required\r\n                        onChange={onChange}\r\n                        value={user.password2}\r\n                        // error={errors.password2}\r\n                        id=\"password2\"\r\n                        type=\"password\"\r\n                        name=\"password2\"\r\n                        //     className={classnames(\"\", {\r\n                        //     invalid: errors.password2\r\n                        //   })}\r\n                      />\r\n                      <label htmlFor=\"password2\">Confirm Password</label>\r\n                    </div>\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"2px\" }}>\r\n                      <button\r\n                        style={{\r\n                          marginBottom: \"25px\",\r\n                          width: \"145px\",\r\n                          height: \"49px\",\r\n                          borderRadius: \"3px\",\r\n                          letterSpacing: \"1.5px\",\r\n                          marginTop: \"1rem\",\r\n                          background:\r\n                            \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n                          color: \"white\",\r\n                        }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-large waves-effect waves-light hoverable accent-3\"\r\n                      >\r\n                        Change Password\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </FadeIn>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default ResetPassword\r\n","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\store.js",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\reducers\\index.js",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\reducers\\authReducer.js",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\actions\\index.js",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\actions\\authAction.js",[],{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"106","line":1,"column":27,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"107","line":3,"column":50,"nodeType":"104","messageId":"105","endLine":3,"endColumn":54},{"ruleId":"102","severity":1,"message":"108","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":13},{"ruleId":"102","severity":1,"message":"109","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":21},{"ruleId":"102","severity":1,"message":"110","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":14},{"ruleId":"102","severity":1,"message":"111","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":12},{"ruleId":"102","severity":1,"message":"112","line":13,"column":10,"nodeType":"104","messageId":"105","endLine":13,"endColumn":21},{"ruleId":"102","severity":1,"message":"113","line":14,"column":9,"nodeType":"104","messageId":"105","endLine":14,"endColumn":22},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"102","severity":1,"message":"118","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"119","line":2,"column":16,"nodeType":"104","messageId":"105","endLine":2,"endColumn":26},{"ruleId":"102","severity":1,"message":"120","line":2,"column":28,"nodeType":"104","messageId":"105","endLine":2,"endColumn":36},{"ruleId":"102","severity":1,"message":"109","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":21},{"ruleId":"102","severity":1,"message":"112","line":3,"column":23,"nodeType":"104","messageId":"105","endLine":3,"endColumn":34},{"ruleId":"102","severity":1,"message":"121","line":7,"column":27,"nodeType":"104","messageId":"105","endLine":7,"endColumn":33},{"ruleId":"102","severity":1,"message":"122","line":7,"column":35,"nodeType":"104","messageId":"105","endLine":7,"endColumn":41},{"ruleId":"102","severity":1,"message":"123","line":7,"column":43,"nodeType":"104","messageId":"105","endLine":7,"endColumn":48},{"ruleId":"102","severity":1,"message":"124","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":16},{"ruleId":"102","severity":1,"message":"125","line":9,"column":8,"nodeType":"104","messageId":"105","endLine":9,"endColumn":22},{"ruleId":"102","severity":1,"message":"113","line":10,"column":10,"nodeType":"104","messageId":"105","endLine":10,"endColumn":23},{"ruleId":"102","severity":1,"message":"126","line":32,"column":10,"nodeType":"104","messageId":"105","endLine":32,"endColumn":15},{"ruleId":"102","severity":1,"message":"127","line":34,"column":9,"nodeType":"104","messageId":"105","endLine":34,"endColumn":19},{"ruleId":"102","severity":1,"message":"118","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"128","line":2,"column":16,"nodeType":"104","messageId":"105","endLine":2,"endColumn":26},{"ruleId":"102","severity":1,"message":"129","line":21,"column":9,"nodeType":"104","messageId":"105","endLine":21,"endColumn":19},{"ruleId":"102","severity":1,"message":"130","line":4,"column":3,"nodeType":"104","messageId":"105","endLine":4,"endColumn":15},{"ruleId":"102","severity":1,"message":"131","line":5,"column":3,"nodeType":"104","messageId":"105","endLine":5,"endColumn":9},{"ruleId":"102","severity":1,"message":"132","line":6,"column":3,"nodeType":"104","messageId":"105","endLine":6,"endColumn":9},{"ruleId":"102","severity":1,"message":"133","line":7,"column":3,"nodeType":"104","messageId":"105","endLine":7,"endColumn":11},{"ruleId":"102","severity":1,"message":"134","line":8,"column":3,"nodeType":"104","messageId":"105","endLine":8,"endColumn":15},{"ruleId":"102","severity":1,"message":"135","line":9,"column":3,"nodeType":"104","messageId":"105","endLine":9,"endColumn":9},{"ruleId":"102","severity":1,"message":"136","line":10,"column":3,"nodeType":"104","messageId":"105","endLine":10,"endColumn":10},{"ruleId":"102","severity":1,"message":"126","line":35,"column":10,"nodeType":"104","messageId":"105","endLine":35,"endColumn":15},{"ruleId":"102","severity":1,"message":"127","line":37,"column":9,"nodeType":"104","messageId":"105","endLine":37,"endColumn":19},{"ruleId":"102","severity":1,"message":"118","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"128","line":2,"column":16,"nodeType":"104","messageId":"105","endLine":2,"endColumn":26},{"ruleId":"102","severity":1,"message":"129","line":24,"column":13,"nodeType":"104","messageId":"105","endLine":24,"endColumn":23},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'useDispatch' is defined but never used.","'Header' is defined but never used.","'Body' is defined but never used.","'useSelector' is defined but never used.","'dispatchLogin' is defined but never used.","no-native-reassign",["137"],"no-negated-in-lhs",["138"],"'Component' is defined but never used.","'useHistory' is defined but never used.","'Redirect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Register' is defined but never used.","'ForgotPassword' is defined but never used.","'modal' is assigned a value but never used.","'modalClick' is assigned a value but never used.","'withRouter' is defined but never used.","'clearState' is assigned a value but never used.","'MDBCardTitle' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'MDBModal' is defined but never used.","'MDBContainer' is defined but never used.","'MDBBtn' is defined but never used.","'MDBIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]