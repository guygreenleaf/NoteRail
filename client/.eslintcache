[{"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\App.jsx":"1","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\index.jsx":"2","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\header\\Header.jsx":"3","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\body\\Body.jsx":"4","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\Landing.jsx":"5","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\notes\\Notes.jsx":"6","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\register\\Register.jsx":"7","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\ForgotPassword.jsx":"8","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\ResetPassword.jsx":"9","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\store.js":"10","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\reducers\\index.js":"11","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\reducers\\authReducer.js":"12","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\actions\\index.js":"13","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\actions\\authAction.js":"14","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\reducers\\tokenReducer.js":"15"},{"size":2302,"mtime":1609550732532,"results":"16","hashOfConfig":"17"},{"size":443,"mtime":1609226777377,"results":"18","hashOfConfig":"17"},{"size":399,"mtime":1608783974095,"results":"19","hashOfConfig":"17"},{"size":315,"mtime":1608791454121,"results":"20","hashOfConfig":"17"},{"size":4953,"mtime":1609550379294,"results":"21","hashOfConfig":"17"},{"size":988,"mtime":1609560549199,"results":"22","hashOfConfig":"17"},{"size":5850,"mtime":1608954703054,"results":"23","hashOfConfig":"17"},{"size":4065,"mtime":1609540511187,"results":"24","hashOfConfig":"17"},{"size":4854,"mtime":1609540392726,"results":"25","hashOfConfig":"17"},{"size":406,"mtime":1609219501552,"results":"26","hashOfConfig":"17"},{"size":170,"mtime":1609538902042,"results":"27","hashOfConfig":"17"},{"size":523,"mtime":1609549093140,"results":"28","hashOfConfig":"17"},{"size":123,"mtime":1609541754842,"results":"29","hashOfConfig":"17"},{"size":504,"mtime":1609542798164,"results":"30","hashOfConfig":"17"},{"size":291,"mtime":1609466312658,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1n2n8py",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\App.jsx",["68","69","70"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\n// import Header from \"./components/header/Header\";\n// import Body from \"./components/body/Body\";\nimport Landing from \"./components/Landing\";\nimport Notes from \"./components/notes/Notes\";\nimport Register from \"./components/register/Register\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport ResetPassword from \"./components/ResetPassword\";\nimport { useSelector } from \"react-redux\";\nimport {\n  dispatchLogin,\n  fetchUser,\n  dispatchGetUser,\n} from \"./redux/actions/authAction\";\n\nfunction App() {\n  const dispatch = useDispatch()\n  const token = useSelector(state => state.token)\n\n  const auth = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    const firstLogin = localStorage.getItem('firstLogin')\n    if(firstLogin){\n      const getToken = async () => {\n        const res = await axios.post('/user/refresh_token', null)\n        dispatch({type: 'GET_TOKEN', payload: res.data.access_token})\n      }\n      getToken()\n    }\n  },[auth.isLogged, dispatch])\n\n  useEffect(() => {\n    if(token){\n      const getUser = () => {\n        dispatch(dispatchLogin())\n\n        return fetchUser(token).then(res => {\n          dispatch(dispatchGetUser(res))\n        })\n      }\n      getUser()\n    }\n  },[token, dispatch])\n\n  console.log(auth);\n  const { user, isLogged } = auth;\n\n  return (\n    <div className=\"app\">\n      {/* Unprotected routes (Note: /reset is only accessible via Authorization token) */}\n      <Router>\n        {isLogged ? <Redirect to={{pathname: \"/notes\"}}/>\n        : \n        <Switch>\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/forgotPassword\" component={ForgotPassword} />\n          <Route exact path=\"/user/reset/:token\" component={ResetPassword} />\n          <Route exact path=\"/\" component={Landing} />\n        </Switch>\n         } \n\n         {!isLogged ? <Redirect to={{pathname: \"/\"}}/> \n      \n      : \n        <Switch>\n          <Route exact path=\"/notes\" component={Notes} />\n        </Switch>\n         } \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",["71","72"],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\index.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\header\\Header.jsx",[],["73","74"],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\body\\Body.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\Landing.jsx",["75","76","77","78","79"],"import React, { Component, useState } from \"react\";\r\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MDBCard, MDBCardBody, MDBFooter, MDBBox } from \"mdbreact\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport Axios from \"axios\";\r\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n// import Register from \"./register/Register\";\r\n// import ForgotPassword from \"./ForgotPassword\";\r\nimport { dispatchLogin } from \"../redux/actions/authAction\";\r\n\r\nfunction Landing() {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  // const auth = useSelector((state) => state.auth);\r\n  // console.log(auth);\r\n  // const { User, isLogged } = auth;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [err, setErr] = useState(\"\");\r\n  // const { email, password, err, success } = user;\r\n\r\n  const onChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n    setErr(\"\");\r\n  };\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const modalClick = (e) => {\r\n    setModal(true);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const res = await Axios.post(\"/user/login\", {\r\n        email: user.email,\r\n        password: user.password,\r\n      });\r\n      setUser({ email: \"\", password: \"\" });\r\n\r\n      localStorage.setItem('firstLogin', true)\r\n      \r\n      dispatch(dispatchLogin());\r\n      history.push(\"/notes\");\r\n      setErr(res.data.msg);\r\n    } catch (err) {\r\n      err.response.data.msg &&\r\n        setErr(\r\n          <FadeIn transitionDuration=\"1100\">{err.response.data.msg}</FadeIn>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n      }}\r\n    >\r\n      <FadeIn transitionDuration=\"1100\">\r\n        <MDBBox display=\"flex\" justifyContent=\"center\">\r\n          <MDBCard>\r\n            <MDBCardBody className=\"mx-3\">\r\n              <div className=\"text-center\">\r\n                <h3 className=\"dark-grey-text mb-5\">\r\n                  <strong>Welcome to NoteRail!</strong>\r\n                </h3>\r\n                <h4 style={{ color: \"black\" }}>{err}</h4>\r\n              </div>\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"login-email\"\r\n                    required\r\n                    value={user.email}\r\n                    onChange={onChangeInput}\r\n                  />\r\n                  <label htmlFor=\"email\">Email</label>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"login-password\"\r\n                    required\r\n                    value={user.password}\r\n                    autoComplete=\"true\"\r\n                    onChange={onChangeInput}\r\n                  />\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <span className=\"red-text\"></span>\r\n                </div>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                  <button\r\n                    style={{\r\n                      width: \"107px\",\r\n                      height: \"45px\",\r\n                      borderRadius: \"3px\",\r\n                      letterSpacing: \"1.5px\",\r\n                      marginTop: \"1rem\",\r\n                      background:\r\n                        \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n                      color: \"white\",\r\n                    }}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                  <div>\r\n                    <p className=\"font-small grey-text\">\r\n                      Forgot your password?\r\n                      <Link to=\"/forgotPassword\" className=\"font-small ml-1\">\r\n                        Click Here\r\n                      </Link>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </MDBCardBody>\r\n            <MDBFooter className=\"mx-5 pt-3 mb-1 bg-white\">\r\n              <p\r\n                className=\"font-small grey-text\"\r\n                style={{ marginRight: \"30px\" }}\r\n              >\r\n                Not a member?\r\n                <Link to=\"/register\" className=\"blue-text ml-1\">\r\n                  Sign Up\r\n                </Link>\r\n              </p>\r\n            </MDBFooter>\r\n          </MDBCard>\r\n        </MDBBox>\r\n      </FadeIn>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\notes\\Notes.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\register\\Register.jsx",["80","81","82"],"import React, { Component, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport Axios from \"axios\";\r\n\r\nfunction Register() {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n    setErr(\"\");\r\n  };\r\n  const clearState = () => {\r\n    setUser({ password: \"\", password2: \"\" });\r\n  };\r\n\r\n  \r\n  const registerSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (user.password !== user.password2) {\r\n      return setErr(\"Passwords do not match. Please try again\");\r\n    } else {\r\n      try {\r\n        const res = await Axios.post(\"/user/register\", {\r\n          name: user.name,\r\n          email: user.email,\r\n          password: user.password,\r\n        });\r\n        setUser({ name: \"\", email: \"\", password: \"\" });\r\n        setErr(res.data.msg);\r\n      } catch (err) {\r\n        err.response.data.msg && setErr(err.response.data.msg);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n      }}\r\n    >\r\n      <FadeIn transitionDuration=\"1100\">\r\n        <div\r\n          className=\"container\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            border: \"1px black\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col s8 offset-s1\">\r\n              <div\r\n                className=\"col s12\"\r\n                style={{ paddingLeft: \"11.250px\", marginTop: \"20px\" }}\r\n              >\r\n                <h4>\r\n                  <b>Register</b> below\r\n                </h4>\r\n                <p className=\"grey-text text-darken-1\">\r\n                  Already have an account? <Link to=\"/\">Log in</Link>\r\n                </p>\r\n                <h4 style={{ color: \"red\" }}>{err}</h4>\r\n              </div>\r\n              <form\r\n                noValidate\r\n                onSubmit={registerSubmit} /*>onSubmit={this.onSubmit}*/\r\n              >\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    required\r\n                    onChange={onChange}\r\n                    value={user.name}\r\n                    name=\"name\"\r\n                    id=\"register-name\"\r\n                    type=\"text\"\r\n                    // className={classnames(\"\", {\r\n                    //   invalid: errors.username,\r\n                    // })}\r\n                  />\r\n                  <label htmlFor=\"name\">Username</label>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    required\r\n                    onChange={onChange}\r\n                    value={user.email}\r\n                    // error={errors.email}\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    //     className={classnames(\"\", {\r\n                    //     invalid: errors.email\r\n                    //   })}\r\n                  />\r\n                  <label htmlFor=\"email\">Email</label>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    required\r\n                    onChange={onChange}\r\n                    value={user.password}\r\n                    // error={errors.password}\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    //     className={classnames(\"\", {\r\n                    //     invalid: errors.password\r\n                    //   })}\r\n                  />\r\n                  <label htmlFor=\"password\">Password</label>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    required\r\n                    onChange={onChange}\r\n                    value={user.password2}\r\n                    // error={errors.password2}\r\n                    id=\"password2\"\r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    //     className={classnames(\"\", {\r\n                    //     invalid: errors.password2\r\n                    //   })}\r\n                  />\r\n                  <label htmlFor=\"password2\">Confirm Password</label>\r\n                </div>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"2px\" }}>\r\n                  <button\r\n                    style={{\r\n                      marginBottom: \"25px\",\r\n                      width: \"125px\",\r\n                      height: \"45px\",\r\n                      borderRadius: \"3px\",\r\n                      letterSpacing: \"1.5px\",\r\n                      marginTop: \"1rem\",\r\n                      background:\r\n                        \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n                      color: \"white\",\r\n                    }}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-large waves-effect waves-light hoverable accent-3\"\r\n                  >\r\n                    Sign up\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </FadeIn>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Register.propTypes = {\r\n//   registerUser: PropTypes.func.isRequired,\r\n//   auth: PropTypes.object.isRequired,\r\n//   errors: PropTypes.object.isRequired,\r\n// };\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   auth: state.auth,\r\n//   errors: state.errors,\r\n// });\r\n\r\n// export default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\nexport default Register;\r\n","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\ForgotPassword.jsx",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\components\\ResetPassword.jsx",["83"],"import React, { useState } from \"react\";\r\nimport { Link,  useParams } from \"react-router-dom\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nfunction ResetPassword() {\r\n    const [user, setUser] = useState({\r\n        password: \"\",\r\n        password2: \"\"\r\n      });\r\n\r\n      const {token} = useParams();\r\n    \r\n      const [err, setErr] = useState(\"\");\r\n    \r\n      const [isHidden, hiding] = useState(true);\r\n\r\n      const onChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser({ ...user, [name]: value });\r\n        setErr(\"\");\r\n      };\r\n      const clearState = () => {\r\n        setUser({ password: \"\", password2: \"\" });\r\n      };\r\n    \r\n      \r\n      const changeSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (user.password !== user.password2) {\r\n          return setErr(\"Passwords do not match. Please try again\");\r\n        } else {\r\n          try {\r\n            const res = await Axios.post(\"/user/reset\",{ \r\n              password: user.password\r\n            }, {headers: {'Authorization': token}});\r\n            hiding(false);\r\n            setErr(res.data.msg);\r\n          } catch (err) {\r\n            err.response.data.msg && setErr(err.response.data.msg);\r\n          }\r\n        }\r\n      };\r\n      return (\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n        >\r\n          <FadeIn transitionDuration=\"1100\">\r\n            <div\r\n              className=\"container\"\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                border: \"1px black\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n            >\r\n              <div className=\"row\">\r\n                <div className=\"col s8 offset-s1\">\r\n                  <div\r\n                    className=\"col s12\"\r\n                    style={{ paddingLeft: \"11.250px\", marginTop: \"20px\" }}\r\n                  >\r\n                    <h4>\r\n                      <b>Reset</b> password\r\n                    </h4>\r\n                    <h4 style={{ color: \"red\" }}>{err}</h4>\r\n                  </div>\r\n                  <form\r\n                    noValidate\r\n                    onSubmit={changeSubmit} /*>onSubmit={this.onSubmit}*/\r\n                  >\r\n                  <Link to=\"/\" style={{marginLeft: '12px'}} hidden={isHidden}> Click here to return to the sign in page</Link>\r\n                    <div className=\"input-field col s12\">\r\n                      <input\r\n                        required\r\n                        onChange={onChange}\r\n                        value={user.password}\r\n                        // error={errors.password}\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        //     className={classnames(\"\", {\r\n                        //     invalid: errors.password\r\n                        //   })}\r\n                      />\r\n                      <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n                    <div className=\"input-field col s12\">\r\n                      <input\r\n                        required\r\n                        onChange={onChange}\r\n                        value={user.password2}\r\n                        // error={errors.password2}\r\n                        id=\"password2\"\r\n                        type=\"password\"\r\n                        name=\"password2\"\r\n                        //     className={classnames(\"\", {\r\n                        //     invalid: errors.password2\r\n                        //   })}\r\n                      />\r\n                      <label htmlFor=\"password2\">Confirm Password</label>\r\n                    </div>\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"2px\" }}>\r\n                      <button\r\n                        style={{\r\n                          marginBottom: \"25px\",\r\n                          width: \"145px\",\r\n                          height: \"49px\",\r\n                          borderRadius: \"3px\",\r\n                          letterSpacing: \"1.5px\",\r\n                          marginTop: \"1rem\",\r\n                          background:\r\n                            \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n                          color: \"white\",\r\n                        }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-large waves-effect waves-light hoverable accent-3\"\r\n                      >\r\n                        Change Password\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </FadeIn>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default ResetPassword\r\n","E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\store.js",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\reducers\\index.js",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\reducers\\authReducer.js",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\actions\\index.js",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\actions\\authAction.js",[],"E:\\WebAndAppDev\\noteRail\\noterail\\client\\src\\redux\\reducers\\tokenReducer.js",[],{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"88","line":7,"column":3,"nodeType":"86","messageId":"87","endLine":7,"endColumn":7},{"ruleId":"84","severity":1,"message":"89","line":57,"column":11,"nodeType":"86","messageId":"87","endLine":57,"endColumn":15},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"90","replacedBy":"94"},{"ruleId":"92","replacedBy":"95"},{"ruleId":"84","severity":1,"message":"96","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"97","line":2,"column":28,"nodeType":"86","messageId":"87","endLine":2,"endColumn":36},{"ruleId":"84","severity":1,"message":"98","line":3,"column":23,"nodeType":"86","messageId":"87","endLine":3,"endColumn":34},{"ruleId":"84","severity":1,"message":"99","line":32,"column":10,"nodeType":"86","messageId":"87","endLine":32,"endColumn":15},{"ruleId":"84","severity":1,"message":"100","line":34,"column":9,"nodeType":"86","messageId":"87","endLine":34,"endColumn":19},{"ruleId":"84","severity":1,"message":"96","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"101","line":2,"column":16,"nodeType":"86","messageId":"87","endLine":2,"endColumn":26},{"ruleId":"84","severity":1,"message":"102","line":21,"column":9,"nodeType":"86","messageId":"87","endLine":21,"endColumn":19},{"ruleId":"84","severity":1,"message":"102","line":24,"column":13,"nodeType":"86","messageId":"87","endLine":24,"endColumn":23},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'user' is assigned a value but never used.","no-native-reassign",["103"],"no-negated-in-lhs",["104"],["103"],["104"],"'Component' is defined but never used.","'Redirect' is defined but never used.","'useSelector' is defined but never used.","'modal' is assigned a value but never used.","'modalClick' is assigned a value but never used.","'withRouter' is defined but never used.","'clearState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]